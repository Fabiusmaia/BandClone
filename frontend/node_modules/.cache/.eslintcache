[{"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\index.js":"1","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\App.js":"2","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\Context\\AuthContext.js":"3","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\Header.js":"4","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\Home.js":"5","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\Signup.js":"6","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\Login.js":"7","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\Logout.js":"8","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\UserDetails.js":"9","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\UserPanel.js":"10","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\AlbumDetails.js":"11"},{"size":267,"mtime":1673759031941,"results":"12","hashOfConfig":"13"},{"size":1182,"mtime":1675569805427,"results":"14","hashOfConfig":"13"},{"size":1248,"mtime":1677726758594,"results":"15","hashOfConfig":"13"},{"size":1215,"mtime":1672863483575,"results":"16","hashOfConfig":"13"},{"size":102,"mtime":1672010363385,"results":"17","hashOfConfig":"13"},{"size":3250,"mtime":1677727845856,"results":"18","hashOfConfig":"13"},{"size":2773,"mtime":1677726801730,"results":"19","hashOfConfig":"13"},{"size":401,"mtime":1673881997164,"results":"20","hashOfConfig":"13"},{"size":3050,"mtime":1677727941821,"results":"21","hashOfConfig":"13"},{"size":10348,"mtime":1677727987430,"results":"22","hashOfConfig":"13"},{"size":1407,"mtime":1677727868872,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1chgpzv",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\index.js",["58"],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\App.js",[],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\Context\\AuthContext.js",["59","60"],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\Header.js",["61","62","63"],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\Home.js",[],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\Signup.js",[],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\Login.js",["64","65"],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\Logout.js",["66","67"],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\UserDetails.js",["68","69","70"],[],"C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\UserPanel.js",["71","72","73","74"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Context } from \"../../Context/AuthContext\";\r\nimport {\r\n  FaPlus,\r\n  FaSmile,\r\n  FaSadCry,\r\n  FaFileUpload,\r\n  FaMinus,\r\n} from \"react-icons/fa\";\r\nimport styles from \"../styling/panel.module.css\";\r\nfunction UserPanel() {\r\n  const [errorPopUp, setErrorPopUp] = useState(false);\r\n  const [successPopUp, setSuccessPopUp] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [cover, setCover] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [inputs, setInputs] = useState([]);\r\n  const [albumImage, setAlbumImage] = useState();\r\n  const [tracks, setTracks] = useState([]);\r\n  const [sendingCover, setSendingCover] = useState(false);\r\n  const [sendingTrackData, setSendingTrackData] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [toggleIcon, setToggleIcon] = useState(true);\r\n  const { authenticated, apiURL } = useContext(Context);\r\n  const [data, setData] = useState({});\r\n  const [albumName, setAlbumName] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const userId = localStorage.getItem(\"user_id\");\r\n  let newStateArray = inputs.slice();\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${apiURL}/users/${userId}/`, {\r\n        headers: { \"x-access-token\": localStorage.getItem(\"token\") },\r\n      })\r\n      .then((response) => {\r\n        setData(response.data.user);\r\n      })\r\n\r\n      .catch((error) => {\r\n        if (error.response.status === 401) {\r\n          navigate(\"/login\");\r\n        } else if (error.response.data.message === \"jwt expired\") {\r\n          navigate(\"/logout\");\r\n        }\r\n      });\r\n  }, []);\r\n  let formData = new FormData();\r\n  formData.append(\"upload_preset\", \"b04ex0je\");\r\n  function handleSubmit(e) {\r\n    console.log(inputs.length);\r\n    if (inputs.length === 0) {\r\n      e.preventDefault();\r\n\r\n      setMessage(\"At least 1 track is required.\");\r\n      setErrorPopUp(true);\r\n      setTimeout(() => {\r\n        setErrorPopUp(false);\r\n      }, 3000);\r\n    } else {\r\n      setLoading(true);\r\n      setSendingTrackData(true);\r\n      let promises = [];\r\n      for (let i = 0; i < inputs.length; i++) {\r\n        promises.push(\r\n          new Promise((resolve, reject) => {\r\n            let path = tracks[i].path;\r\n            formData.append(`file`, path);\r\n            axios\r\n              .post(\r\n                \"https://api.cloudinary.com/v1_1/doaz7klln/video/upload\",\r\n                formData,\r\n                {\r\n                  headers: {},\r\n                }\r\n              )\r\n              .then((response) => {\r\n                let obj = tracks[i];\r\n                obj.path = response.data.secure_url;\r\n                console.log(tracks);\r\n                resolve();\r\n              });\r\n          })\r\n        );\r\n      }\r\n\r\n      Promise.all(promises).then(() => {\r\n        console.log(\"all promises resolved!\");\r\n        setSendingCover(true);\r\n        setSendingTrackData(false);\r\n        formData.append(\"file\", albumImage);\r\n        axios\r\n          .post(\r\n            \"https://api.cloudinary.com/v1_1/doaz7klln/image/upload\",\r\n            formData,\r\n            {\r\n              headers: {},\r\n            }\r\n          )\r\n          .then((response) => {\r\n            setSendingCover(false);\r\n            setSendingTrackData(true);\r\n            console.log(response.data.secure_url);\r\n            setCover(response.data.secure_url);\r\n          })\r\n          .catch((error) => {\r\n            setSendingCover(false);\r\n            setSendingTrackData(true);\r\n            setMessage(\"Error:\", error.data.message);\r\n          });\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      axios\r\n        .post(\r\n          `${apiURL}/api/albums/`,\r\n          {\r\n            name: albumName,\r\n            cover: cover,\r\n            userId: userId,\r\n            tracks: [...tracks],\r\n          },\r\n          { headers: { \"x-access-token\": localStorage.getItem(\"token\") } }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setMessage(response.data.message);\r\n          setSuccessPopUp(true);\r\n          setTimeout(() => {\r\n            setSuccessPopUp(false);\r\n          }, 3000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error, tracks);\r\n          setMessage(error.data);\r\n          setErrorPopUp(true);\r\n          setTimeout(() => {\r\n            setErrorPopUp(false);\r\n          }, 3000);\r\n        });\r\n      setSendingTrackData(false);\r\n      setLoading(false);\r\n      setInputs([]);\r\n      setTracks([]);\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [cover]);\r\n\r\n  function handleClick() {\r\n    setToggle(true);\r\n    setToggleIcon(false);\r\n\r\n    if (toggle === true) {\r\n      setToggle(false);\r\n      setToggleIcon(true);\r\n    }\r\n    newStateArray = [1];\r\n  }\r\n  function addTrack(e, i) {\r\n    let obj = tracks;\r\n    obj[i].name = e.target.value;\r\n    setTracks(obj);\r\n    console.log(tracks);\r\n    console.log(albumImage);\r\n  }\r\n  function setTrackFile(e, i) {\r\n    let obj = tracks;\r\n    console.log(obj[i]);\r\n    obj[i].path = e.target.files[0];\r\n    setTracks(obj);\r\n  }\r\n  function addInput(e) {\r\n    setTracks([...tracks, { name: \"\", path: \"\" }]);\r\n    newStateArray.push(inputs.length + 1);\r\n    setInputs(newStateArray);\r\n    console.log(albumImage);\r\n    console.log(albumName);\r\n  }\r\n  return (\r\n    <div className={styles.panelContainer}>\r\n      {!authenticated && (\r\n        <div>\r\n          <p>401 unauthorized</p>\r\n        </div>\r\n      )}\r\n      {authenticated && (\r\n        <div>\r\n          {loading && (\r\n            <div className={styles.loading}>\r\n              {sendingCover && <h2>Sending album cover to the server...</h2>}\r\n              {sendingTrackData && <h2>Sending track data to the server...</h2>}\r\n              <img src={require(\"../styling/loading.gif\")} />\r\n            </div>\r\n          )}\r\n          {!loading && (\r\n            <div>\r\n              {successPopUp && (\r\n                <div className={styles.successPopUp}>\r\n                  <h3>{message}</h3>\r\n                  <FaSmile />\r\n                </div>\r\n              )}\r\n              {errorPopUp && (\r\n                <div className={styles.errorPopUp}>\r\n                  <h3>{message}</h3>\r\n                  <FaSadCry />\r\n                </div>\r\n              )}\r\n              <h1>Hello, {data.name}</h1>\r\n              <div className={styles.formDiv}>\r\n                <h1\r\n                  className={styles.ddclick}\r\n                  onClick={() => {\r\n                    handleClick();\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {toggleIcon ? <FaPlus /> : <FaMinus />} Create a new album\r\n                </h1>\r\n                <form\r\n                  className={toggle ? styles.dropdown_toggle : styles.dropdown}\r\n                  onSubmit={(e) => handleSubmit(e)}\r\n                >\r\n                  <div className={styles.albumInput}>\r\n                    <div className={styles.inputField}>\r\n                      <label htmlFor=\"name\">Album name</label>\r\n                      <br />\r\n                      <input\r\n                        type=\"text\"\r\n                        required\r\n                        alue={albumName}\r\n                        onChange={(e) => setAlbumName(e.target.value)}\r\n                      ></input>\r\n                    </div>\r\n                    <div className={styles.inputField}>\r\n                      <label htmlFor=\"cover\">Album image cover</label>\r\n                      <br></br>\r\n                      <input\r\n                        type=\"file\"\r\n                        required\r\n                        className={styles.fileInput}\r\n                        onChange={(e) => {\r\n                          setAlbumImage(e.target.files[0]);\r\n                        }}\r\n                      ></input>\r\n                      <br></br>\r\n                    </div>\r\n                    {inputs.map((t, i) => {\r\n                      return (\r\n                        <div className={styles.inputContainer}>\r\n                          <label htmlFor=\"name\">\r\n                            {\" \"}\r\n                            Track {i + 1} name:\r\n                            <br></br>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            required\r\n                            name={`track${i}`}\r\n                            onChange={(e) => {\r\n                              addTrack(e, i);\r\n                            }}\r\n                          ></input>\r\n                          <div className={styles.inputField}>\r\n                            <label htmlFor=\"name\"> Track {i + 1} file:</label>\r\n                            <br></br>\r\n                            <input\r\n                              type=\"file\"\r\n                              id=\"fileInput\"\r\n                              required\r\n                              name={`track${i}`}\r\n                              onChange={(e) => {\r\n                                setTrackFile(e, i);\r\n                              }}\r\n                              accept=\".mp3, .wav, .flac, .ogg\"\r\n                            ></input>\r\n                          </div>\r\n                          <br></br>\r\n                        </div>\r\n                      );\r\n                    })}{\" \"}\r\n                    <br></br>\r\n                  </div>\r\n                  <div className={styles.inputField}>\r\n                    <h3\r\n                      className={styles.addTrack}\r\n                      onClick={(e) => {\r\n                        addInput();\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <FaPlus /> Add track\r\n                    </h3>\r\n                  </div>\r\n                  <div className={styles.inputField}>\r\n                    <input type=\"submit\"></input>\r\n                  </div>\r\n                </form>\r\n                <hr></hr>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default UserPanel;\r\n","C:\\Users\\toranvor\\Desktop\\bandclone-app\\frontend\\src\\components\\pages\\AlbumDetails.js",["75","76"],[],{"ruleId":"77","severity":1,"message":"78","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":22},{"ruleId":"77","severity":1,"message":"81","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":22,"column":6,"nodeType":"84","endLine":22,"endColumn":21,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"86","line":3,"column":22,"nodeType":"79","messageId":"80","endLine":3,"endColumn":31},{"ruleId":"77","severity":1,"message":"81","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":37,"column":34,"nodeType":"89","endLine":37,"endColumn":160},{"ruleId":"82","severity":1,"message":"90","line":13,"column":6,"nodeType":"84","endLine":13,"endColumn":8,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"92","line":21,"column":9,"nodeType":"79","messageId":"80","endLine":21,"endColumn":17},{"ruleId":"77","severity":1,"message":"93","line":7,"column":25,"nodeType":"79","messageId":"80","endLine":7,"endColumn":38},{"ruleId":"82","severity":1,"message":"90","line":10,"column":6,"nodeType":"84","endLine":10,"endColumn":8,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"95","line":38,"column":6,"nodeType":"84","endLine":38,"endColumn":12,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"88","line":50,"column":23,"nodeType":"89","endLine":50,"endColumn":74},{"ruleId":"87","severity":1,"message":"88","line":58,"column":19,"nodeType":"89","endLine":58,"endColumn":39},{"ruleId":"77","severity":1,"message":"97","line":11,"column":3,"nodeType":"79","messageId":"80","endLine":11,"endColumn":15},{"ruleId":"82","severity":1,"message":"98","line":52,"column":6,"nodeType":"84","endLine":52,"endColumn":8,"suggestions":"99"},{"ruleId":"82","severity":1,"message":"100","line":155,"column":6,"nodeType":"84","endLine":155,"endColumn":13,"suggestions":"101"},{"ruleId":"87","severity":1,"message":"88","line":200,"column":15,"nodeType":"89","endLine":200,"endColumn":62},{"ruleId":"82","severity":1,"message":"102","line":23,"column":6,"nodeType":"84","endLine":23,"endColumn":8,"suggestions":"103"},{"ruleId":"87","severity":1,"message":"88","line":26,"column":7,"nodeType":"89","endLine":26,"endColumn":30},"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'expirationDate' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["104"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'handleLogout'. Either include it or remove the dependency array.",["105"],"'instance' is assigned a value but never used.","'authenticated' is assigned a value but never used.",["106"],"React Hook useEffect has missing dependencies: 'apiURL', 'id', and 'navigate'. Either include them or remove the dependency array.",["107"],"'FaFileUpload' is defined but never used.","React Hook useEffect has missing dependencies: 'apiURL', 'navigate', and 'userId'. Either include them or remove the dependency array.",["108"],"React Hook useEffect has missing dependencies: 'albumName', 'apiURL', 'tracks', and 'userId'. Either include them or remove the dependency array.",["109"],"React Hook useEffect has missing dependencies: 'apiURL' and 'id'. Either include them or remove the dependency array.",["110"],{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [authenticated, expirationDate, token]",{"range":"124","text":"125"},"Update the dependencies array to be: [handleLogout]",{"range":"126","text":"127"},{"range":"128","text":"127"},"Update the dependencies array to be: [apiURL, id, navigate, page]",{"range":"129","text":"130"},"Update the dependencies array to be: [apiURL, navigate, userId]",{"range":"131","text":"132"},"Update the dependencies array to be: [albumName, apiURL, cover, tracks, userId]",{"range":"133","text":"134"},"Update the dependencies array to be: [apiURL, id]",{"range":"135","text":"136"},[783,798],"[authenticated, expirationDate, token]",[432,434],"[handleLogout]",[318,320],[1418,1424],"[apiURL, id, navigate, page]",[1832,1834],"[apiURL, navigate, userId]",[4804,4811],"[albumName, apiURL, cover, tracks, userId]",[755,757],"[apiURL, id]"]